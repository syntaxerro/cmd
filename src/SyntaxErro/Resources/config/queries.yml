# ---------------------------- DOMAINS ----------------------------
# *** Adding new domain. ***
#
# Parameter: domain name, eg. "example.com"
new_domain: "INSERT INTO virtual_domains SET name='%s'"

# *** List all domains. ***
#
# Required 'id' and 'name' keys.
# Use aliases if your database is different, eg.
#   SELECT domain_id AS id, domain_name AS name FROM custom_domains_table
all_domains: "SELECT id, name FROM virtual_domains"

# *** Delete domain. ***
#
# Parameter: domain id from database.
remove_domain: "DELETE FROM virtual_domains WHERE id='%s'"


# ---------------------------- USERS ----------------------------
# *** Adding new user. ***
#
# Parameters: firstly domain_id, next email and last is password.
new_user: "INSERT INTO virtual_users SET domain_id = '%s', email='%s', password = ENCRYPT('%s', CONCAT('$6$', SUBSTRING(SHA(RAND()), -16)))"

# *** List all users. ***
#
# Required 'id', 'domain_id' and 'email' keys.
# Use aliases if your database is different, eg.
#   SELECT user_id AS id, domain AS domain_id, user_email AS email FROM custom_users_table
all_users: "SELECT id, domain_id, email FROM virtual_users"

# *** Delete user. ***
#
# Parameter: user id from database.
remove_user: "DELETE FROM virtual_users WHERE id='%s'"

# *** Checking user exist ***
#
# Parameter: email, eg. user@example.com
user_exist: "SELECT 1 FROM virtual_users WHERE email='%s'"

# *** Change user password. ***
#
# Parameters: firstly plain text new password from console, next user email
update_password: "UPDATE virtual_users SET password = ENCRYPT('%s', CONCAT('$6$', SUBSTRING(SHA(RAND()), -16))) WHERE email = '%s'"


# ---------------------------- ALIASES ----------------------------
# *** Adding new alias. ***
#
# Parameters: firstly domain_id, next new alias and last is destination user.
new_alias: "INSERT INTO virtual_aliases SET domain_id = '%s', source = '%s', destination = '%s'"

# *** List all aliases. ***
#
# Required 'id', 'source' and 'destination' keys.
# Use aliases if your database is different, eg.
#   SELECT alias_id AS id, alias AS source, user AS destination FROM custom_aliases_table
all_aliases: "SELECT id, source, destination FROM virtual_aliases"

# *** Delete alias. ***
#
# Parameter: alias id from database.
remove_alias: "DELETE FROM virtual_aliases WHERE id='%s'"


# ---------------------------- SPAMASSASSIN ----------------------------
# *** Adding to blacklist or removing from blacklist. ***
#
# Parameters: firstly username, next content of blacklist
black_add: "INSERT INTO userpref SET username='%s', preference='blacklist_from', value='%s'"

# Parameters: firstly adding email to blacklist, next username
black_update_add: "UPDATE userpref SET value=CONCAT(value, ' %s') WHERE username='%s' AND preference='blacklist_from'"

# Parameters: firstly removing email from blacklist, next username
black_update_remove: "UPDATE userpref SET value=REPLACE(value, '%s', '') WHERE username='%s' AND preference='blacklist_from'"

# Parameter: username
black_exist: "SELECT 1 FROM userpref WHERE username='%s' AND preference='blacklist_from'"


# *** Adding to whitelist or removing from whitelist. ***
#
# Parameters: firstly username, next content of blacklist
white_add: "INSERT INTO userpref SET username='%s', preference='whitelist_from', value='%s'"

# Parameters: firstly content of blacklist, next username
white_update_add: "UPDATE userpref SET value=CONCAT(value, ' %s') WHERE username='%s' AND preference='whitelist_from'"

# Parameters: firstly removing email from whitelist, next username
white_update_remove: "UPDATE userpref SET value=REPLACE(value, ' %s', '') WHERE username='%s' AND preference='whitelist_from'"

# Parameter: username
white_exist: "SELECT 1 FROM userpref WHERE username='%s' AND preference='whitelist_from'"
